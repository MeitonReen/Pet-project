<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Authentification="clr-namespace:Layer0_Client.Authentification.Views"
					xmlns:CreatingOrder="clr-namespace:Layer0_Client.CreatingOrder.Views"
					xmlns:MainMenu="clr-namespace:Layer0_Client.MainMenu.Views"
					>

	<Color x:Key="Light">#f99898</Color>
	<Color x:Key="Darker">#985656</Color>
	<Color x:Key="Dark">#401e1e</Color>
	<Color x:Key="Darkest">#211111</Color>

	<SolidColorBrush x:Key="BorderColor" Color="{StaticResource Darker}"></SolidColorBrush>
	<SolidColorBrush x:Key="BackgroundColor" Color="Transparent"></SolidColorBrush>

	<SolidColorBrush x:Key="TextColor" Color="{StaticResource Darker}"></SolidColorBrush>

	<SolidColorBrush x:Key="MainBackgroundColor" Color="{StaticResource Darkest}"></SolidColorBrush>

	<SolidColorBrush x:Key="CaretColor" Color="{StaticResource Darker}"></SolidColorBrush>
	<SolidColorBrush x:Key="SelectionTextColor" Color="{StaticResource Light}"></SolidColorBrush>

	<SolidColorBrush x:Key="CheckMarkColor" Color="{StaticResource Darker}"></SolidColorBrush>

	<SolidColorBrush x:Key="IsActionBorderColor" Color="{StaticResource Light}"></SolidColorBrush>
	<SolidColorBrush x:Key="IsActionBackgroundColor" Color="{StaticResource Dark}"></SolidColorBrush>
	<SolidColorBrush x:Key="IsActionForegroundColor" Color="{StaticResource Light}"></SolidColorBrush>

	<SolidColorBrush x:Key="PressToRepeatButtonColor" Color="{StaticResource Darker}"></SolidColorBrush>


	<Style TargetType="FrameworkElement">
		<Setter Property="Block.Padding" Value="3"></Setter>

		<Setter Property="TextElement.Foreground" Value="{StaticResource TextColor}"></Setter>
		<Setter Property="TextElement.FontFamily" Value="Calibri"></Setter>
		<Setter Property="TextElement.FontWeight" Value="Bold"></Setter>
		<Setter Property="TextElement.FontSize" Value="16"></Setter>
	</Style>

	<Style TargetType="Control" BasedOn="{StaticResource {x:Type FrameworkElement}}">
		<Style.Setters>
			<Setter Property="Background" Value="{StaticResource BackgroundColor}"></Setter>
			<Setter Property="BorderBrush" Value="{StaticResource BorderColor}"></Setter>

			<Setter Property="Padding" Value="3"></Setter>
			<Setter Property="Margin" Value="3"></Setter>
		</Style.Setters>
	</Style>

	<Style TargetType="Button" BasedOn="{StaticResource {x:Type Control}}">
		<Style.Setters>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border 
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Margin="{TemplateBinding Margin}"
							Padding="{TemplateBinding Padding}"
							BorderThickness="1">
							<ContentPresenter 
								HorizontalAlignment="Center" VerticalAlignment="Center"
							></ContentPresenter>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Padding" Value="3, 0, 3, 0"></Setter>
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource IsActionBorderColor}"></Setter>
				<Setter Property="Foreground" Value="{StaticResource IsActionForegroundColor}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type Control}}">
		<Style.Setters>
			<Setter Property="CaretBrush" Value="{StaticResource CaretColor}"></Setter>
			<Setter Property="SelectionBrush" Value="{StaticResource SelectionTextColor}"></Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border 
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}" 
							Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}"
							Margin="{TemplateBinding Margin}">
							<ScrollViewer 
								x:Name="PART_ContentHost"
								Focusable="false"
								HorizontalScrollBarVisibility="Hidden"
								VerticalScrollBarVisibility="Hidden">
							</ScrollViewer>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Padding" Value="0"></Setter>
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource IsActionBorderColor}"></Setter>
			</Trigger>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource IsActionBorderColor}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type FrameworkElement}}">
		<Style.Setters>
		</Style.Setters>
	</Style>

	<Style TargetType="Window" BasedOn="{StaticResource {x:Type Control}}">
		<Style.Setters>
			<Setter Property="Background" Value="{StaticResource MainBackgroundColor}"></Setter>
		</Style.Setters>
	</Style>

	<Style TargetType="ListBox" BasedOn="{StaticResource {x:Type Control}}">
		<Style.Setters>
			<Setter Property="BorderThickness" Value="0"></Setter>
			<Setter Property="Margin" Value="0"></Setter>
			<Setter Property="Padding" Value="0"></Setter>
		</Style.Setters>
	</Style>

	<Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type Control}}">
		<Style.Setters>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							Padding="{TemplateBinding Padding}"
							Margin="{TemplateBinding Margin}"
							Height="{TemplateBinding Height}"
							Width="{TemplateBinding Width}"
							MaxHeight="{TemplateBinding MaxHeight}"
							MaxWidth="{TemplateBinding MaxWidth}"
							BorderThickness="1">
							<ContentPresenter></ContentPresenter>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Margin" Value="1"></Setter>
		</Style.Setters>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource IsActionBorderColor}"></Setter>
				<Setter Property="Foreground" Value="{StaticResource IsActionForegroundColor}"></Setter>
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{StaticResource IsActionBackgroundColor}"></Setter>
				<Setter Property="BorderBrush" Value="{StaticResource IsActionBorderColor}"></Setter>
				<Setter Property="Foreground" Value="{StaticResource IsActionForegroundColor}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type Control}}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Border x:Name="Border" 
								Width="13" 
								Height="13" 
								CornerRadius="0" 
								Background="{StaticResource BackgroundColor}"
								BorderThickness="1"
								BorderBrush="{StaticResource BorderColor}">
								<Path
									Width="7" Height="7" 
									x:Name="CheckMark"
									SnapsToDevicePixels="False" 
									Stroke="{StaticResource CheckMarkColor}"
									StrokeThickness="2"
									Data="M 0 0 L 7 7 M 0 7 L 7 0"></Path>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="4,0,0,0"
							VerticalAlignment="Center"
							HorizontalAlignment="Left"
							RecognizesAccessKey="True"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Background"
								Value="{StaticResource IsActionBackgroundColor}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background"
								Value="{StaticResource IsActionBackgroundColor}" />
							<Setter TargetName="Border" Property="BorderBrush"
								Value="{StaticResource IsActionBorderColor}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
							<Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
							<Setter Property="Foreground" Value="#888888"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type Control}}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Grid Width="13" Height="13" >
								<Ellipse x:Name="Border" 
									Fill="{StaticResource BackgroundColor}"
									StrokeThickness="1"
									Stroke="{StaticResource BorderColor}" />
								<Ellipse x:Name="CheckMark" Margin="4"
									Fill="{StaticResource CheckMarkColor}" />
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter 
							Margin="4,0,0,0"
							VerticalAlignment="Center"
							HorizontalAlignment="Left"
							RecognizesAccessKey="True"/>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="Border" Property="Fill" 
								Value="{StaticResource IsActionBackgroundColor}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Fill"
								Value="{StaticResource IsActionBackgroundColor}" />
							<Setter TargetName="Border" Property="Stroke"
								Value="{StaticResource IsActionBorderColor}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Border" Property="Fill" Value="#EEEEEE" />
							<Setter TargetName="Border" Property="Stroke" Value="#40000000" />
							<Setter Property="Foreground" Value="#80000000"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--#region ScrollViewer //ужоц-->

	<SolidColorBrush x:Key="StandardBorderBrush" Color="{StaticResource Darker}" />
	<SolidColorBrush x:Key="StandardBackgroundBrush" Color="Transparent" />
	<SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="{StaticResource Dark}" />
	<SolidColorBrush x:Key="SelectedForegroundBrush" Color="Transparent" />
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
	<SolidColorBrush x:Key="NormalBrush" Color="{StaticResource Dark}" />
	<SolidColorBrush x:Key="NormalBorderBrush" Color="Transparent" />
	<SolidColorBrush x:Key="HorizontalNormalBrush" Color="{StaticResource Dark}" />
	<SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="Transparent" />
	<SolidColorBrush x:Key="GlyphBrush" Color="{StaticResource Darker}" />
	<Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Name="Border" Margin="1" CornerRadius="2"
							Background="{StaticResource NormalBrush}"
							BorderBrush="{StaticResource NormalBorderBrush}"
							BorderThickness="1">
						<Path HorizontalAlignment="Center" VerticalAlignment="Center"
								Fill="{StaticResource GlyphBrush}"
								Data="{Binding Path=Content,
									RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="Border" Property="Background"
								Value="{StaticResource PressToRepeatButtonColor}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground"
								Value="{StaticResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="Transparent" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border

          CornerRadius="2"
          Background="{TemplateBinding Background}"

          BorderBrush="{TemplateBinding BorderBrush}"

          BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="VerticalScrollBar"

            TargetType="{x:Type ScrollBar}">
		<Grid >
			<Grid.RowDefinitions>
				<RowDefinition MaxHeight="18"/>
				<RowDefinition Height="0.00001*"/>
				<RowDefinition MaxHeight="18"/>
			</Grid.RowDefinitions>
			<Border
      Grid.RowSpan="3"

      CornerRadius="2"
      Background="Transparent" />
			<RepeatButton

      Grid.Row="0"
      Style="{StaticResource ScrollBarLineButton}"

      Height="18"
      Command="ScrollBar.LineUpCommand"

      Content="M 0 4 L 8 4 L 4 0 Z" />
			<Track

      Name="PART_Track"

      Grid.Row="1"
      IsDirectionReversed="true">
				<Track.DecreaseRepeatButton>
					<RepeatButton

          Style="{StaticResource ScrollBarPageButton}"

          Command="ScrollBar.PageUpCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb

          Style="{StaticResource ScrollBarThumb}"

          Margin="1,0,1,0"
          Background="{StaticResource HorizontalNormalBrush}"

          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton

          Style="{StaticResource ScrollBarPageButton}"

          Command="ScrollBar.PageDownCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton

      Grid.Row="3"
      Style="{StaticResource ScrollBarLineButton}"

      Height="18"
      Command="ScrollBar.LineDownCommand"

      Content="M 0 0 L 4 4 L 8 0 Z"/>
		</Grid>
	</ControlTemplate>
	<ControlTemplate x:Key="HorizontalScrollBar"

            TargetType="{x:Type ScrollBar}">
		<Grid >
			<Grid.ColumnDefinitions>
				<ColumnDefinition MaxWidth="18"/>
				<ColumnDefinition Width="0.00001*"/>
				<ColumnDefinition MaxWidth="18"/>
			</Grid.ColumnDefinitions>
			<Border
      Grid.ColumnSpan="3"

      CornerRadius="2"
      Background="Transparent" />
			<RepeatButton

      Grid.Column="0"
      Style="{StaticResource ScrollBarLineButton}"

      Width="18"
      Command="ScrollBar.LineLeftCommand"

      Content="M 4 0 L 4 8 L 0 4 Z" />
			<Track

      Name="PART_Track"

      Grid.Column="1"
      IsDirectionReversed="False">
				<Track.DecreaseRepeatButton>
					<RepeatButton

          Style="{StaticResource ScrollBarPageButton}"

          Command="ScrollBar.PageLeftCommand" />
				</Track.DecreaseRepeatButton>
				<Track.Thumb>
					<Thumb

          Style="{StaticResource ScrollBarThumb}"

          Margin="0,1,0,1"
          Background="{StaticResource NormalBrush}"

          BorderBrush="{StaticResource NormalBorderBrush}" />
				</Track.Thumb>
				<Track.IncreaseRepeatButton>
					<RepeatButton

          Style="{StaticResource ScrollBarPageButton}"

          Command="ScrollBar.PageRightCommand" />
				</Track.IncreaseRepeatButton>
			</Track>
			<RepeatButton

      Grid.Column="3"
      Style="{StaticResource ScrollBarLineButton}"

      Width="18"
      Command="ScrollBar.LineRightCommand"

      Content="M 0 0 L 4 4 L 0 8 Z"/>
		</Grid>
	</ControlTemplate>
	<Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="Height" Value="18" />
				<Setter Property="Template"

                        Value="{StaticResource HorizontalScrollBar}" />
			</Trigger>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Width" Value="18"/>
				<Setter Property="Height" Value="Auto" />
				<Setter Property="Template"

                        Value="{StaticResource VerticalScrollBar}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>

						<ScrollContentPresenter Grid.Column="1"/>

						<ScrollBar Name="PART_VerticalScrollBar"

            Value="{TemplateBinding VerticalOffset}"

            Maximum="{TemplateBinding ScrollableHeight}"

            ViewportSize="{TemplateBinding ViewportHeight}"

            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
						<ScrollBar Name="PART_HorizontalScrollBar"

            Orientation="Horizontal"

            Grid.Row="1"
            Grid.Column="1"

            Value="{TemplateBinding HorizontalOffset}"

            Maximum="{TemplateBinding ScrollableWidth}"

            ViewportSize="{TemplateBinding ViewportWidth}"

            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region Привязка всех окон к Window-->
	<Style 
		TargetType="{x:Type Authentification:VAuthentification}"
		BasedOn="{StaticResource {x:Type Window}}"
	></Style>
	<Style 
		TargetType="{x:Type MainMenu:VMainMenu}"
		BasedOn="{StaticResource {x:Type Window}}"
	></Style>
	<Style 
		TargetType="{x:Type MainMenu:VOrderDetails}"
		BasedOn="{StaticResource {x:Type Window}}"
	></Style>
	<Style 
		TargetType="{x:Type CreatingOrder:VCreatingOrder}"
		BasedOn="{StaticResource {x:Type Window}}"
	></Style>
	<!--#endregion-->

</ResourceDictionary>